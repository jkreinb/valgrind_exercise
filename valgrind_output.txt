jon@jon-VirtualBox:~/ENPM808X/cpp-boilerplate/build$ valgrind ./app/shell-app 
==7062== Memcheck, a memory error detector
==7062== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7062== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==7062== Command: ./app/shell-app
==7062== 
Averaged sensor reading: 10
==7062== Conditional jump or move depends on uninitialised value(s)
==7062==    at 0x109D68: main (main.cpp:9)
==7062== 
==7062== 
==7062== HEAP SUMMARY:
==7062==     in use at exit: 44 bytes in 2 blocks
==7062==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==7062== 
==7062== LEAK SUMMARY:
==7062==    definitely lost: 24 bytes in 1 blocks
==7062==    indirectly lost: 20 bytes in 1 blocks
==7062==      possibly lost: 0 bytes in 0 blocks
==7062==    still reachable: 0 bytes in 0 blocks
==7062==         suppressed: 0 bytes in 0 blocks
==7062== Rerun with --leak-check=full to see details of leaked memory
==7062== 
==7062== For counts of detected and suppressed errors, rerun with: -v
==7062== Use --track-origins=yes to see where uninitialised values come from
==7062== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

// running --leak-check=full

jon@jon-VirtualBox:~/ENPM808X/cpp-boilerplate/build$ valgrind --leak-check=full ./app/shell-app 
==7261== Memcheck, a memory error detector
==7261== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==7261== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==7261== Command: ./app/shell-app
==7261== 
Averaged sensor reading: 10
DONE
==7261== 
==7261== HEAP SUMMARY:
==7261==     in use at exit: 44 bytes in 2 blocks
==7261==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==7261== 
==7261== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==7261==    at 0x4C3217F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7261==    by 0x109EA6: AnalogSensor::Read() (AnalogSensor.cpp:16)
==7261==    by 0x109D44: main (main.cpp:7)
==7261== 
==7261== LEAK SUMMARY:
==7261==    definitely lost: 24 bytes in 1 blocks
==7261==    indirectly lost: 20 bytes in 1 blocks
==7261==      possibly lost: 0 bytes in 0 blocks
==7261==    still reachable: 0 bytes in 0 blocks
==7261==         suppressed: 0 bytes in 0 blocks
==7261== 
==7261== For counts of detected and suppressed errors, rerun with: -v
==7261== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

